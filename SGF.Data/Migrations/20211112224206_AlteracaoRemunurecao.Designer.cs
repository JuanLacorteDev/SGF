// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGF.Data.Context;

namespace SGF.Data.Migrations
{
    [DbContext(typeof(SGFDbContext))]
    [Migration("20211112224206_AlteracaoRemunurecao")]
    partial class AlteracaoRemunurecao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGF.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("SGF.Domain.Entities.DespesaMes", b =>
                {
                    b.Property<Guid>("DespesaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DespesaId", "MesId");

                    b.HasIndex("MesId");

                    b.ToTable("DespesasMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Mes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Identificador_Numerico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Remuneracao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MesInicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SalarioMensal")
                        .HasColumnType("bit");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Remuneracoes");
                });

            modelBuilder.Entity("SGF.Domain.Entities.RemuneracaoMes", b =>
                {
                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RemuneracaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MesId", "RemuneracaoId");

                    b.HasIndex("RemuneracaoId");

                    b.ToTable("RemuneracoesMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.SaldoMes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MesId");

                    b.ToTable("SaldoMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Despesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SGF.Domain.Entities.DespesaMes", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Despesa", "Despesa")
                        .WithMany("DespesaMeses")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGF.Domain.Entities.Mes", "Mes")
                        .WithMany("DespesaMeses")
                        .HasForeignKey("MesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("Mes");
                });

            modelBuilder.Entity("SGF.Domain.Entities.RemuneracaoMes", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Mes", "Mes")
                        .WithMany("RemunecaoMeses")
                        .HasForeignKey("MesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGF.Domain.Entities.Remuneracao", "Remuneracao")
                        .WithMany("RemuneracaoMeses")
                        .HasForeignKey("RemuneracaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mes");

                    b.Navigation("Remuneracao");
                });

            modelBuilder.Entity("SGF.Domain.Entities.SaldoMes", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Mes", "Mes")
                        .WithMany()
                        .HasForeignKey("MesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mes");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.Navigation("DespesaMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Mes", b =>
                {
                    b.Navigation("DespesaMeses");

                    b.Navigation("RemunecaoMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Remuneracao", b =>
                {
                    b.Navigation("RemuneracaoMeses");
                });
#pragma warning restore 612, 618
        }
    }
}
