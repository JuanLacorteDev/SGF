// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGF.Data.Context;

namespace SGF.Data.Migrations
{
    [DbContext(typeof(SGFDbContext))]
    partial class SGFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGF.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("SGF.Domain.Entities.DespesaMes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DespesaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("MesId");

                    b.ToTable("DespesasMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Mes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Identificador_Numerico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Despesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SGF.Domain.Entities.DespesaMes", b =>
                {
                    b.HasOne("SGF.Domain.Entities.Despesa", "Despesa")
                        .WithMany("DespesaMeses")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGF.Domain.Entities.Mes", "Mes")
                        .WithMany("DespesaMeses")
                        .HasForeignKey("MesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("Mes");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Despesa", b =>
                {
                    b.Navigation("DespesaMeses");
                });

            modelBuilder.Entity("SGF.Domain.Entities.Mes", b =>
                {
                    b.Navigation("DespesaMeses");
                });
#pragma warning restore 612, 618
        }
    }
}
